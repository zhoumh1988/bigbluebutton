@import "/imports/ui/stylesheets/mixins/focus";
@import "/imports/ui/stylesheets/mixins/_indicators";
@import "/imports/ui/stylesheets/variables/_all";

.form {
  flex-grow: 0;
  flex-shrink: 0;
  align-self: flex-end;
  width: 100%;
  position: relative;
  margin-bottom: calc(-1 * var(--sm-padding-x));
  padding: 0 1rem;
  padding-bottom: 1rem;
}

.wrapper {
  display: flex;
  flex-direction: row;
  margin-bottom: 8px;
}

.actions {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-grow: 0;
  flex-shrink: 0;
  border: var(--border-size) solid var(--color-gray-lighter);
  background-color: #fff;
  border-radius: var(--border-radius) 0 0 var(--border-radius);
  color: var(--color-gray-light);
  padding: var(--sm-padding-y) var(--sm-padding-x);
  cursor: pointer;

  :global(.animationsEnabled) & {
    transition: all .3s;
  }

  --bg-faded: rgba(167,179,189,0.25);

  &:hover,
  &:focus {
    background-color: var(--bg-faded);
  }

  &:disabled,
  &[disabled] {
    cursor: not-allowed;
    opacity: .75;
    background-color: var(--bg-faded);
  }
}

.input {
  /**@include inputFocus(var(--color-blue-light));**/
  flex: 1;
  background-clip: padding-box;
  margin: 0;
  color: var(--color-text);
  -webkit-appearance: none;
  padding: calc(var(--sm-padding-y) * 1.5) calc(var(--sm-padding-x) * 1.25);
  resize: none;
  transition: none;
  border-radius: var(--border-radius);
  font-size: var(--font-size-base);
  min-height: 2.5rem;
  height: 2.5rem;
  opacity: 1;
  background: #f2f2ff;
  border-radius: 1.25rem;
  border: none;

  &:disabled,
  &[disabled] {
    cursor: not-allowed;
    opacity: .75;
    background-color: rgba(167,179,189,0.25);
  }

  &:hover {
    @include highContrastOutline();
  }

  &:active,
  &:focus {
    @include highContrastOutline();
    outline-style: solid;
  }
}

.sendButton {
  margin:0 0 0 var(--sm-padding-x);
  align-self: center;
  font-size: 0.9rem;

  [dir="rtl"]  & {
    margin: 0 var(--sm-padding-x) 0 0;
    -webkit-transform: scale(-1, 1);
    -moz-transform: scale(-1, 1);
    -ms-transform: scale(-1, 1);
    -o-transform: scale(-1, 1);
    transform: scale(-1, 1);
  }
  >span{
    width: 4rem;
    height: 2.5rem;
    border-radius: 1.25rem;
  }
}

.error,
.info {
  font-size: calc(var(--font-size-base) * .75);
  color: var(--color-gray-dark);
  text-align: left;
  padding: var(--border-size) 0;

  [dir="rtl"] & {
    text-align: right;
  }
}

.spacer {
  &:before {
    content: "\00a0"; // non-breaking space
  }
}

.coupleTyper,
.singleTyper {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-weight: bold;
  font-size: var(--font-size-smaller);
}

.singleTyper {
  max-width: 70%;
}

.coupleTyper {
  max-width: 25%;
}

.typingIndicator {
  display: flex;
  flex-direction: row;

  > span {
    display: flex;
    flex-direction: row;
    width: 100%;
    line-height: var(--font-size-md);
  }
}

.error {
  color: var(--color-danger);
}

.connectingAnimation {
  margin: auto;
  display: inline-block;
  width: 1.5em;

  &:after {
    overflow: hidden;
    display: inline-block;
    vertical-align: bottom;
    content: "\2026"; /* ascii code for the ellipsis character */
    width: 0;
    margin-left: 0.25em;

    :global(.animationsEnabled) & {
      animation: ellipsis steps(4, end) 900ms infinite;
    }
  }
}

@keyframes ellipsis {
  to {
    width: 1.5em;
  }
}
